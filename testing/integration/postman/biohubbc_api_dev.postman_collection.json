{
	"info": {
		"_postman_id": "e0b4a7cc-a614-4c29-b692-2f63d1f4e4d1",
		"name": "BioHubBC-API-DEV",
		"description": "API for BioHubBC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/template",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b19d99a-a6c4-40e5-b122-8e6101fbcf87",
						"exec": [
							"// Set the `TEMPLATE_ID` environment variable to the `template_id` value returned by the last `POST template` request\r",
							"var response = JSON.parse(responseBody);\r",
							"pm.environment.set(\"TEMPLATE_ID\", response.template_id);\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ddc6bd50-e79b-4c1c-9998-0b56873c8070",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"description": "To access the authenticated api routes, a valid JWT token must be present in the 'Authorization' header.\nThe 'Authorization' header value must be of the form: `Bearer xxxxxx.yyyyyyy.zzzzzz`\n",
						"key": "Authorization",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"A template name\",\r\n    \"description\": \"A template description\",\r\n    \"tags\": [\r\n        \"animal\",\r\n        \"terrestrial\"\r\n    ],\r\n    \"data_template\": {\r\n        \"title\": \"Observation Form\",\r\n        \"type\": \"object\",\r\n        \"required\": [\r\n            \"type\",\r\n            \"date\",\r\n            \"quantity\"\r\n        ],\r\n        \"properties\": {\r\n            \"type\": {\r\n                \"type\": \"string\",\r\n                \"title\": \"Type\",\r\n                \"x-enum-code\": {\r\n                    \"x-enum-code-category-name\": \"biohub\",\r\n                    \"x-enum-code-header-name\": \"biohub_type_code\",\r\n                    \"x-enum-code-name\": \"code_name\",\r\n                    \"x-enum-code-text\": \"code_description\",\r\n                    \"x-enum-code-sort-order\": \"code_sort_order\"\r\n                }\r\n            },\r\n            \"date\": {\r\n                \"type\": \"string\",\r\n                \"title\": \"Date\",\r\n                \"format\": \"date-time\"\r\n            },\r\n            \"quantity\": {\r\n                \"type\": \"number\",\r\n                \"title\": \"Quantity\",\r\n                \"minimum\": 0,\r\n                \"maximum\": 1000\r\n            },\r\n            \"comment\": {\r\n                \"type\": \"string\",\r\n                \"title\": \"Comment\",\r\n                \"maxLength\": 500\r\n            }\r\n        }\r\n    },\r\n    \"ui_template\": {\r\n        \"ui:order\": [\r\n            \"type\",\r\n            \"quantity\",\r\n            \"date\",\r\n            \"comment\"\r\n        ],\r\n        \"type\": {},\r\n        \"quantity\": {},\r\n        \"date\": {\r\n            \"ui:widget\": \"datetime\"\r\n        },\r\n        \"comment\": {\r\n            \"ui:widget\": \"textarea\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{BASEURL}}/template",
					"host": [
						"{{BASEURL}}"
					],
					"path": [
						"template"
					]
				},
				"description": "Create a new template."
			},
			"response": [
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"activityType\": \"irure in est dolor\",\n \"activitySubType\": \"dolore adipisicing\",\n \"date\": \"ipsum aute\",\n \"locationAndGeometry\": \"dolor amet\"\n}"
				},
				{
					"name": "Unauthorized user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"Duis deserunt\",\n \"errors\": [\n  \"laborum\",\n  \"reprehenderit culpa sit do\"\n ]\n}"
				}
			]
		},
		{
			"name": "/template/{templateId}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "660c9fcd-6722-41e2-977c-102bca08677d",
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"description": "To access the authenticated api routes, a valid JWT token must be present in the 'Authorization' header.\nThe 'Authorization' header value must be of the form: `Bearer xxxxxx.yyyyyyy.zzzzzz`\n",
						"key": "Authorization",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{BASEURL}}/template/{{TEMPLATE_ID}}",
					"host": [
						"{{BASEURL}}"
					],
					"path": [
						"template",
						"{{TEMPLATE_ID}}"
					]
				},
				"description": "Fetch a template."
			},
			"response": [
				{
					"name": "Unauthorized user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"Duis deserunt\",\n \"errors\": [\n  \"laborum\",\n  \"reprehenderit culpa sit do\"\n ]\n}"
				},
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"activityType\": \"irure in est dolor\",\n \"activitySubType\": \"dolore adipisicing\",\n \"date\": \"ipsum aute\",\n \"locationAndGeometry\": \"dolor amet\"\n}"
				}
			]
		},
		{
			"name": "/activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19ae9abf-b8e5-4939-96e7-93449517772a",
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"description": "To access the authenticated api routes, a valid JWT token must be present in the 'Authorization' header.\nThe 'Authorization' header value must be of the form: `Bearer xxxxxx.yyyyyyy.zzzzzz`\n",
						"key": "Authorization",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"tags\": [\r\n        \"animal\",\r\n        \"terrestrial\"\r\n    ],\r\n    \"template_id\": \"{{TEMPLATE_ID}}\",\r\n    \"form_data\": {\r\n        \"type\": \"test_type\",\r\n        \"date\": \"2020-12-15T02:00:03.978Z\",\r\n        \"quantity\": 11,\r\n        \"comment\": \"This is a comment\"\r\n    }\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{BASEURL}}/activity",
					"host": [
						"{{BASEURL}}"
					],
					"path": [
						"activity"
					]
				},
				"description": "Create a new activity."
			},
			"response": [
				{
					"name": "Unauthorized user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"Duis deserunt\",\n \"errors\": [\n  \"laborum\",\n  \"reprehenderit culpa sit do\"\n ]\n}"
				},
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"activityType\": \"<string>\",\n    \"activityTypeData\": \"<object>\",\n    \"activitySubType\": \"<string>\",\n    \"activitySubTypeData\": \"<object>\",\n    \"date\": \"<date>\",\n    \"locationAndGeometry\": {\n        \"anchorPointY\": \"<integer>\",\n        \"anchorPointX\": \"<integer>\",\n        \"area\": \"<integer>\",\n        \"geometry\": \"<object>\",\n        \"jurisdiction\": \"<string>\",\n        \"agency\": \"<string>\",\n        \"observer1FirstName\": \"<string>\",\n        \"observer1LastName\": \"<string>\",\n        \"locationComment\": \"<string>\",\n        \"generalComment\": \"<string>\",\n        \"photoTaken\": \"<boolean>\"\n    },\n    \"deviceRequestUID\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activity"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"activityType\": \"irure in est dolor\",\n \"activitySubType\": \"dolore adipisicing\",\n \"date\": \"ipsum aute\",\n \"locationAndGeometry\": \"dolor amet\"\n}"
				}
			]
		},
		{
			"name": "/version",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ebc75b05-0f5b-4a69-9910-38ec8422e942",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASEURL}}/version",
					"host": [
						"{{BASEURL}}"
					],
					"path": [
						"version"
					]
				},
				"description": "Get api version information."
			},
			"response": [
				{
					"name": "Fetched api version information",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/misc/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"misc",
								"version"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"version\": \"eu esse sint aliqua Lorem\",\n \"environment\": \"est qui nostrud\"\n}"
				}
			]
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ced0cb4-22d1-4598-b582-5feea5bea589",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{KEYCLOAK_CLIENT_ID}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{TEST_USERNAME}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{TEST_PASSWORD}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{KEYCLOAK_URL}}",
					"host": [
						"{{KEYCLOAK_URL}}"
					]
				},
				"description": "Fetch a bearer token for use in other API calls."
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{KEYCLOAK_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9eae8876-aaea-4334-91db-92ec5fb99371",
				"type": "text/javascript",
				"exec": [
					"const echoPostRequest = {",
					"    url: pm.environment.get('KEYCLOAK_URL'),",
					"    method: 'POST',",
					"    header: 'Content-Type:application/x-www-form-urlencoded',",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: 'username', value: pm.environment.get('POSTMAN_USERNAME') },",
					"            { key: 'password', value: pm.environment.get('POSTMAN_PW') },",
					"            { key: 'scope', value: 'openid' },",
					"            { key: 'client_id', value: 'biohubbc-bc' },",
					"            { key: 'grant_type', value: 'password' }",
					"        ]",
					"    }",
					"};",
					"",
					"var getToken = true;",
					"",
					"if (!pm.environment.get('KEYCLOAK_TOKEN_EXPIRY') ||",
					"    !pm.environment.get('KEYCLOAK_TOKEN')) {",
					"    console.log('Token or expiry date are missing')",
					"} else if (pm.environment.get('KEYCLOAK_TOKEN_EXPIRY') <= (new Date()).getTime()) {",
					"    console.log('Token is expired')",
					"} else {",
					"    getToken = false;",
					"    console.log('Token and expiry date are all good');",
					"}",
					"",
					"if (getToken === true) {",
					"    pm.sendRequest(echoPostRequest, function (err, res) {",
					"        console.log(err ? err : res.json());",
					"        if (err === null) {",
					"            console.log('Saving the token and expiry date')",
					"            var responseJson = res.json();",
					"            pm.environment.set('KEYCLOAK_TOKEN', responseJson.access_token)",
					"",
					"            var expiryDate = new Date();",
					"            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"            pm.environment.set('KEYCLOAK_TOKEN_EXPIRY', expiryDate.getTime());",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d52d1cc3-7e86-4be2-8ba2-0b30e6863137",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}