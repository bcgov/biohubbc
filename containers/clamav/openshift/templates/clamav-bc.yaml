kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: clamav-build
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.
    value: clamav
    required: true
  - name: GIT_SOURCE_URL
    displayName: GIT Source Repo URL
    description: A GIT URL to your source code.
    value: "https://github.com/bcgov/biohubbc.git"
    required: true
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    value: dev
    required: true
  - name: SOURCE_CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    value: containers/clamav
  - name: NAME_SPACE
    displayName: Namespace for source image
    value: af2668-tools
    required: true
  - name: CPU_REQUEST
    value: "100m"
  - name: CPU_LIMIT
    value: "1000m"
  - name: MEMORY_REQUEST
    value: "2G"
  - name: MEMORY_LIMIT
    value: "4G"
objects:
  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      name: "${NAME}"

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: "${NAME}-build"
      creationTimestamp: null
      labels:
        app: "${NAME}"
    spec:
      runPolicy: Serial
      completionDeadlineSeconds: 1800
      source:
        type: Git
        git:
          ref: "${GIT_REF}"
          uri: "${GIT_SOURCE_URL}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
        secrets:
          - secret:
              name: platform-services-controlled-etc-pki-entitlement
            destinationDir: etc-pki-entitlement
        configMaps:
          - configMap:
              name: platform-services-controlled-rhsm-conf
            destinationDir: rhsm-conf
          - configMap:
              name: platform-services-controlled-rhsm-ca
            destinationDir: rhsm-ca
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: "ubi:latest"
            namespace: "${NAME_SPACE}"
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      resources:
        requests:
          cpu: ${CPU_REQUEST}
          memory: ${MEMORY_REQUEST}
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
