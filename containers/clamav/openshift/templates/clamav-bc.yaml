kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: clamav-build
  namespace: af2668-tools
  selfLink: >-
    /apis/template.openshift.io/v1/namespaces/af2668-tools/templates/clamav-build
  uid: 4f945b52-0a11-490f-8859-689a21d0ecd4
  resourceVersion: '1643081480'
  creationTimestamp: '2021-09-08T18:47:11Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: template.openshift.io/v1
      time: '2021-09-08T18:52:17Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:objects': {}
        'f:parameters': {}
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.
    value: clamav
    required: true
  - name: GIT_SOURCE_URL
    displayName: GIT Source Repo URL
    description: A GIT URL to your source code.
    value: 'https://github.com/bcgov/biohubbc.git'
    required: true
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    value: dev
    required: true
  - name: SOURCE_CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    value: containers/clamav
  - name: NAME_SPACE
    displayName: Namespace for source image
    value: af2668-tools
    required: true
  - name: CPU_REQUEST
    value: "100m"
  - name: CPU_LIMIT
    value: "1000m"
  - name: MEMORY_REQUEST
    value: "2G"
  - name: MEMORY_LIMIT
    value: "4G"
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: '${NAME}'

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: '${NAME}-build'
      creationTimestamp: null
      labels:
        app: '${NAME}'
    spec:
      runPolicy: Serial
      completionDeadlineSeconds: 1800
      triggers:
        - type: ImageChange
          imageChange:
            from:
              kind: ImageStreamTag
              name: '${NAME}:latest'
      source:
        type: Git
        git:
          ref: '${GIT_REF}'
          uri: '${GIT_SOURCE_URL}'
        contextDir: '${SOURCE_CONTEXT_DIR}'
        secrets:
          - secret:
              name: etc-pki-entitlement
            destinationDir: etc-pki-entitlement
        configMaps:
          - configMap:
              name: rhsm-conf
            destinationDir: rhsm-conf
          - configMap:
              name: rhsm-ca
            destinationDir: rhsm-ca
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: 'ubi:latest'
            namespace: '${NAME_SPACE}'
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:latest'
      resources:
        requests:
          cpu: "${CPU_REQUEST}"
          memory: "${MEMORY_REQUEST}"
        limits:
          cpu: "${CPU_LIMIT}"
          memory: "${MEMORY_LIMIT}"