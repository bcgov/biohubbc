kind: Template
apiVersion: v1
metadata:
  name: clamav
parameters:
  - description:
      The name assigned to all of the openshift objects defined in this template.
      It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: clamav
  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: biohubbc-tools
  - description: The name of the role label, used to uniquely identify this deployment
    displayName: Role Name
    name: ROLE_NAME
    value: clamav
  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: dev
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp:
      labels:
        app: "${NAME}"
        role: "${ROLE_NAME}"
      name: "${NAME}"
    spec:
      replicas: 1
      selector:
        app: "${NAME}"
        deploymentconfig: "${NAME}"
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp:
          labels:
            app: "${NAME}"
            role: "${ROLE_NAME}"
            deploymentconfig: "${NAME}"
        spec:
          containers:
            - image: "${NAME}"
              imagePullPolicy: Always
              name: "${NAME}"
              ports:
                - containerPort: 3310
                  protocol: TCP
              env:
                - name: RealIpFrom
                  value: "${REAL_IP_FROM}"
                - name: AdditionalRealIpFromRules
                  value: "${AdditionalRealIpFromRules}"
                - name: IpFilterRules
                  value: "${IpFilterRules}"
              resources:
                requests:
                  cpu: 1000m
                  memory: 1Gi
                limits:
                  cpu: 2000m
                  memory: 2Gi
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_NAMESPACE}"
              name: "${NAME}:${TAG_NAME}"
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp:
      labels:
        app: "${NAME}"
      name: "${NAME}"
    spec:
      ports:
        - name: 3310-tcp
          port: 3310
          protocol: TCP
          targetPort: 3310
      selector:
        app: "${NAME}"
        deploymentconfig: "${NAME}"
      sessionAffinity: None
      type: ClusterIP
