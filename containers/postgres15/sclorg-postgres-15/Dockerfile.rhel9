FROM ubi9/s2i-core

# PostgreSQL image for OpenShift.
# Volumes:
#  * /var/lib/pgsql/data   - Database cluster for PostgreSQL
# Environment:
#  * $POSTGRESQL_USER     - Database user name
#  * $POSTGRESQL_PASSWORD - User's password
#  * $POSTGRESQL_DATABASE - Name of the database to create
#  * $POSTGRESQL_ADMIN_PASSWORD (Optional) - Password for the 'postgres'
#                           PostgreSQL administrative account

ENV POSTGRESQL_VERSION=15 \
    POSTGRESQL_PREV_VERSION=13 \
    HOME=/var/lib/pgsql \
    PGUSER=postgres \
    APP_DATA=/opt/app-root

ENV POSTGISV 3.4
ENV TZ America/Vancouver
ENV PORT 5432 

ENV SUMMARY="PostgreSQL is an advanced Object-Relational database management system" \
    DESCRIPTION="PostgreSQL is an advanced Object-Relational database management system (DBMS). \
    The image contains the client and server programs that you'll need to \
    create, run, maintain and access a PostgreSQL DBMS server."

LABEL summary="$SUMMARY" \
    description="$DESCRIPTION" \
    io.k8s.description="$DESCRIPTION" \
    io.k8s.display-name="PostgreSQL 15" \
    io.openshift.expose-services="5432:postgresql" \
    io.openshift.tags="database,postgresql,postgresql15,postgresql-15,postgis,postgis$POSTGISV" \
    io.openshift.s2i.assemble-user="26" \
    name="rhel9/postgresql-15" \
    com.redhat.component="postgresql-15-container" \
    version="1" \
    com.redhat.license_terms="https://www.redhat.com/en/about/red-hat-end-user-license-agreements#rhel" \
    usage="podman run -d --name postgresql_database -e POSTGRESQL_USER=user -e POSTGRESQL_PASSWORD=pass -e POSTGRESQL_DATABASE=db -p 5432:5432 rhel9/postgresql-15" \
    maintainer="SoftwareCollections.org <sclorg@redhat.com>"

# USER 0

# Copy entitlements and subscription manager configurations
# https://github.com/BCDevOps/OpenShift4-Migration/issues/15
# COPY ./etc-pki-entitlement /etc/pki/entitlement
# COPY ./rhsm-conf /etc/rhsm
# COPY ./rhsm-ca /etc/rhsm/ca

EXPOSE 5432

COPY root/usr/libexec/fix-permissions /usr/libexec/fix-permissions

# RUN yum repolist > /dev/null && \
#     yum install -y yum-utils gettext && \
#     yum-config-manager --disable \* &> /dev/null && \
#     yum-config-manager --enable rhel-9-for-x86_64-baseos-rpms && \
#     yum-config-manager --enable rhel-9-for-x86_64-appstream-rpms && \
#     yum-config-manager --enable codeready-builder-for-rhel-9-x86_64-rpms

# This image must forever use UID 26 for postgres user so our volumes are
# safe in the future. This should *never* change, the last test is there
# to make sure of that.
RUN { yum -y module enable postgresql:15 || :; } && \
    INSTALL_PKGS="rsync tar gettext bind-utils nss_wrapper postgresql-server postgresql-contrib" && \
    INSTALL_PKGS="$INSTALL_PKGS pgaudit" && \
    yum -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS
RUN postgres -V | grep -qe "$POSTGRESQL_VERSION\." && echo "Found VERSION $POSTGRESQL_VERSION" && \
    (yum -y reinstall tzdata || yum -y update tzdata ) && \
    yum -y clean all --enablerepo='*' && \
    localedef -f UTF-8 -i en_US en_US.UTF-8
RUN test "$(id postgres)" = "uid=26(postgres) gid=26(postgres) groups=26(postgres)"
RUN mkdir -p /var/lib/pgsql/data
RUN /usr/libexec/fix-permissions /var/lib/pgsql /var/run/postgresql

# Get prefix path and path to scripts rather than hard-code them in scripts
ENV CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql \
    ENABLED_COLLECTIONS=

COPY root /
COPY ./s2i/bin/ $STI_SCRIPTS_PATH

# Aquire and build PostGIS 3.4, for PostgreSQL 15.x
RUN cd /tmp && \
    rpm -ivh https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
    yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm 

RUN yum -y remove rh-postgresql15-postgresql-server-syspaths rh-postgresql15-postgresql-contrib-syspaths rh-postgresql15-postgresql-syspaths
RUN yum install -y postgis34_15
RUN yum install -y postgis34_15-client
RUN yum install -y pgrouting_15

RUN /usr/bin/install -c -m 755  /usr/pgsql-15/lib/postgis* '/opt/rh/rh-postgresql15/root/usr/lib64/pgsql/' && \
    /usr/bin/install -c -m 755  /usr/pgsql-15/lib/libpgrouting* '/opt/rh/rh-postgresql15/root/usr/lib64/pgsql/' && \
    /usr/bin/install -c -m 755  /usr/pgsql-15/lib/pgcrypto* '/opt/rh/rh-postgresql15/root/usr/lib64/pgsql/' && \
    /usr/bin/install -c -m 755  /usr/pgsql-15/lib/fuzzystrmatch* '/opt/rh/rh-postgresql15/root/usr/lib64/pgsql/' && \    
    /usr/bin/install -c -m 644 /usr/pgsql-15/share/extension/postgis* '/opt/rh/rh-postgresql15/root/usr/share/pgsql/extension/' && \
    /usr/bin/install -c -m 644 /usr/pgsql-15/share/extension/pgrouting* '/opt/rh/rh-postgresql15/root/usr/share/pgsql/extension/' && \
    /usr/bin/install -c -m 644 /usr/pgsql-15/share/extension/pgcrypto* '/opt/rh/rh-postgresql15/root/usr/share/pgsql/extension/' && \
    /usr/bin/install -c -m 644 /usr/pgsql-15/share/extension/fuzzystrmatch* '/opt/rh/rh-postgresql15/root/usr/share/pgsql/extension/' && \
    mv /usr/pgsql-15/share/contrib/postgis-3.4/ /opt/rh/rh-postgresql15/root/usr/share/pgsql/contrib/ 

RUN rm -rf /tmp/pgdg-redhat-repo-latest.noarch.rpm /var/cache/yum

# Remove entitlements and Subscription Manager configs
# RUN rm -rf /etc/pki/entitlement && \
#     rm -rf /etc/rhsm/rhsm-conf && rm -fr /etc/rhsm/ca

# Not using VOLUME statement since it's not working in OpenShift Online:
# https://github.com/sclorg/httpd-container/issues/30
# VOLUME ["/var/lib/pgsql/data"]

# S2I permission fixes
# --------------------
# 1. unless specified otherwise (or - equivalently - we are in OpenShift), s2i
#    build process would be executed as 'uid=26(postgres) gid=26(postgres)'.
#    Such process wouldn't be able to execute the default 'assemble' script
#    correctly (it transitively executes 'fix-permissions' script).  So let's
#    add the 'postgres' user into 'root' group here
#
# 2. we call fix-permissions on $APP_DATA here directly (UID=0 during build
#    anyways) to assure that s2i process is actually able to _read_ the
#    user-specified scripting.
RUN usermod -a -G root postgres && \
    /usr/libexec/fix-permissions --read-only "$APP_DATA"

USER 26

ENTRYPOINT ["container-entrypoint"]
CMD ["run-postgresql"]
