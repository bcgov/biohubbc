kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: sims-db-setup-dc
  labels:
    build: sims-db-setup
parameters:
  - name: IMAGE
    description: 'Image for pod'
    required: true
  - name: NAME
    value: sims-db-setup
  - name: SUFFIX
    value: '-dev'
  - name: VERSION
    description: Version of the application
    value: '1.0.0'
  - name: CHANGE_ID
    description: Change id of the project. This will help to pull image stream
    required: true
    value: '0'
  - name: DB_SERVICE_NAME
    description: 'Database service name associated  with deployment'
    required: true
  - name: DB_SCHEMA
    description: 'Database schema'
    required: true
  - name: DB_SCHEMA_DAPI_V1
    description: 'Database api v1 schema'
    required: true
  - name: NODE_ENV
    description: Application Environment type variable
    required: true
    value: 'development'
  # Development Seeding
  - name: PROJECT_SEEDER_USER_IDENTIFIER
    value: 0
  - name: NUM_SEED_PROJECTS
    value: 0
  - name: NUM_SEED_SURVEYS_PER_PROJECT
    value: 0
  # Openshift Resources
  - name: CPU_REQUEST
    value: '50m'
  - name: CPU_LIMIT
    value: '1000m'
  - name: MEMORY_REQUEST
    value: '100Mi'
  - name: MEMORY_LIMIT
    value: '1.5Gi'
objects:
  - kind: Pod
    apiVersion: v1
    metadata:
      name: '${NAME}'
      labels:
        role: setup
    spec:
      containers:
        - name: postgresql-setup
          env:
            - name: DB_HOST
              value: ${DB_SERVICE_NAME}
            - name: DB_ADMIN
              valueFrom:
                secretKeyRef:
                  key: database-admin
                  name: ${DB_SERVICE_NAME}
            - name: DB_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${DB_SERVICE_NAME}
            - name: DB_USER_API
              valueFrom:
                secretKeyRef:
                  key: database-user-api
                  name: ${DB_SERVICE_NAME}
            - name: DB_USER_API_PASS
              valueFrom:
                secretKeyRef:
                  key: database-user-api-password
                  name: ${DB_SERVICE_NAME}
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DB_SERVICE_NAME}
            - name: DB_PORT
              value: '5432'
            - name: CHANGE_VERSION
              value: ${CHANGE_ID}
            - name: NODE_ENV
              value: ${NODE_ENV}
            - name: VERSION
              value: ${VERSION}
            - name: DB_SCHEMA
              value: ${DB_SCHEMA}
            - name: DB_SCHEMA_DAPI_V1
              value: ${DB_SCHEMA_DAPI_V1}
            - name: PROJECT_SEEDER_USER_IDENTIFIER
              value: ${PROJECT_SEEDER_USER_IDENTIFIER}
            - name: NUM_SEED_PROJECTS
              value: ${NUM_SEED_PROJECTS}
            - name: NUM_SEED_SURVEYS_PER_PROJECT
              value: ${NUM_SEED_SURVEYS_PER_PROJECT}
          image: '${IMAGE}'
          imagePullPolicy: Always
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
      restartPolicy: Never
      activeDeadlineSeconds: 900
      dnsPolicy: ClusterFirst
