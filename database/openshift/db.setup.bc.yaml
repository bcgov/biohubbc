apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  labels:
    build: biohubbc-db-setup
  name: biohubbc-db-setup
parameters:
  - name: NAME
    displayName: Name
    description: Image name
    required: true
    value: biohubbc-db-setup
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: true
    value: "-dev"
  - name: VERSION
    required: true
    value: "1.0"
  - name: SOURCE_CONTEXT_DIR
    required: true
    value: database
  - name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/bcgov/biohubbc
  - name: SOURCE_REPOSITORY_REF
    required: false
    value: dev
  - name: BASE_IMAGE_URL
    required: true
    value: registry.access.redhat.com/ubi8/nodejs-10:1-41
  - name: SOURCE_IMAGE_NAME
    required: true
    value: redhat-ubi-node-10
  - name: SOURCE_IMAGE_TAG
    required: true
    value: 1-41
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${SOURCE_IMAGE_NAME}
      creationTimestamp: null
      annotations:
        description: Nodejs Base Image
      labels:
        shared: "true"
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: ${SOURCE_IMAGE_TAG}
          annotations: null
          from:
            kind: DockerImage
            name: ${BASE_IMAGE_URL}
          importPolicy: {}
          referencePolicy:
            type: Local
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"
      creationTimestamp:
      annotations:
        description: Nodejs Runtime Image
      labels:
        shared: "true"
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: "${NAME}${SUFFIX}"
      creationTimestamp:
      labels: {}
      annotations: {}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector:
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:${VERSION}"
      postCommit: {}
      resources:
        limits:
          cpu: '1'
          memory: 1.5Gi
        requests:
          cpu: 500m
          memory: 512Mi
      runPolicy: SerialLatestOnly
      source:
        contextDir: "${SOURCE_CONTEXT_DIR}"
        git:
          uri: "${SOURCE_REPOSITORY_URL}"
          ref: "${SOURCE_REPOSITORY_REF}"
        type: Git
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${SOURCE_IMAGE_NAME}:${SOURCE_IMAGE_TAG}
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange
        - type: ImageChange
    status:
      lastVersion: 7
